<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.inmarsat.bpm.finance</groupId>
	<artifactId>accounting-profit-centre-rules</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>BPM - Finance - Accounting - Profit Centre Rules</name>
	<description></description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<camel.version>2.18.0</camel.version>
		<fabric8.version>2.2.176</fabric8.version>
		<fuse.version>6.2.1.redhat-084</fuse.version>
		<cucumber.version>1.2.5</cucumber.version>
	</properties>

	<!-- DO NOT REMOVE: Required for usage of Inmarsat Nexus Repositories. -->
	<repositories>
		<repository>
			<id>inmarsat-nexus-public-group</id>
			<name>Inmarsat Nexus Public Group Repository</name>
			<url>http://172.31.48.40:8081/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>inmarsat-nexus-public-group</id>
			<name>Inmarsat Nexus Public Group Repository</name>
			<url>http://172.31.48.40:8081/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!-- Required for Specifying Camel Versions -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-parent</artifactId>
				<version>${camel.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Required for specifying fabric8 Versions -->
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-project-bom-with-platform-deps</artifactId>
				<version>${fabric8.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Required for specifying fuse Versions -->
			<dependency>
				<groupId>org.jboss.fuse.bom</groupId>
				<artifactId>jboss-fuse-parent</artifactId>
				<version>${fuse.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jsonpath</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jasypt</artifactId>
		</dependency>

		<!-- camel spring for DI, IOC and bootstrapping camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- camel jms and activemq -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jms</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>fabric8-arquillian</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Required for Enforcing Java 8 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Required for building the jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- DO NOT REMOVE: Required to copy the kube config files into the kube 
				dir. The automated deployment process will look in the kube directory for 
				the configuration. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resource-one</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/kube</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/kube-generator/kube</directory>
									<includes>
										<include>*.json</include>
										<include>*.yml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- DO NOT REMOVE: Required for packaging the app and dependencies in 
				a zip. The automated deployment process will look for this format on nexus 
				when building the image. -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>hawt-app-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>hawt-app</id>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<javaMainClass>org.apache.camel.spring.Main</javaMainClass>
				</configuration>
			</plugin>

			<!-- Required for Unit Testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<inherited>true</inherited>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*BT.java</include>
					</includes>
					<excludes>
						<exclude>**/*KT.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- allows the route to be ran via 'mvn exec:java' -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<mainClass>org.apache.camel.spring.Main</mainClass>
				</configuration>
			</plugin>

			<!-- DO NOT REMOVE: Required to create the kubernetes.zip file, containing 
				the deployment artifacts (kube yaml files). -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<finalName>kubernetes</finalName>
					<descriptorRefs>
						<descriptorRef>project</descriptorRef>
					</descriptorRefs>
					<archiveBaseDirectory>kube/</archiveBaseDirectory>
					<formats>
						<format>zip</format>
					</formats>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- DO NOT REMOVE: Required for pushing artifacts to Nexus -->
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Nexus Internal Releases</name>
			<url>http://172.31.48.40:8081/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Nexus Internal Snapshot Releases</name>
			<url>http://172.31.48.40:8081/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>
