---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    description: "A trivial Spring XML Camel service that accepts emulated customer\
      \ greetings (via a 'simulator route'), appends a secret message, and sends to\
      \ an emulated customer service (implemented as a bean that creates a log message)."
    iconClass: "icon-java"
  labels: {}
  name: "spring-xml-camel-sandbox"
objects:
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    annotations: {}
    labels:
      app: "spring-xml-camel"
      artifact: "spring-xml-camel"
      container: "java"
      component: "spring-xml-camel"
      provider: "s2i"
      project: "spring-xml-camel"
      group: "com.inmarsat.esb.templates"
    name: "spring-xml-camel"
  spec:
    tags: []
  status:
    dockerImageRepository: ""
    tags: []
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    annotations: {}
    labels:
      app: "spring-xml-camel"
      artifact: "spring-xml-camel"
      container: "java"
      component: "spring-xml-camel"
      provider: "s2i"
      project: "spring-xml-camel"
      group: "com.inmarsat.esb.templates"
    name: "spring-xml-camel"
  spec:
    output:
      to:
        kind: "ImageStreamTag"
        name: "spring-xml-camel:latest"
    resources:
      limits: {}
      requests: {}
    source:
      contextDir: ""
      git:
        ref: "develop"
        uri: "https://github.com/Inmarsat-itcloudservices/ESB-Template-Spring-XML-Camel.git"
      images: []
      secrets: []
      sourceSecret:
        name: "sshsecret"
      type: "Git"
    strategy:
      sourceStrategy:
        env:
        - name: "BUILD_LOGLEVEL"
          value: "5"
        - name: "ARTIFACT_DIR"
          value: ""
        - name: "MAVEN_ARGS"
          value: "package -DskipTests -e"
        - name: "MAVEN_ARGS_APPEND"
          value: ""
        forcePull: true
        from:
          kind: "ImageStreamTag"
          name: "fis-java-openshift:1.0"
          namespace: "openshift"
        incremental: true
      type: "Source"
    triggers:
    - github:
        secret: "${BUILD_SECRET}"
      type: "GitHub"
    - generic:
        secret: "${BUILD_SECRET}"
      type: "Generic"
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
  status:
    lastVersion: 0
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    annotations: {}
    labels:
      app: "spring-xml-camel"
      artifact: "spring-xml-camel"
      container: "java"
      component: "spring-xml-camel"
      deploymentconfig: "spring-xml-camel"
      provider: "s2i"
      project: "spring-xml-camel"
      group: "com.inmarsat.esb.templates"
    name: "spring-xml-camel"
  spec:
    replicas: 1
    selector:
      app: "spring-xml-camel"
      artifact: "spring-xml-camel"
      container: "java"
      component: "spring-xml-camel"
      deploymentconfig: "spring-xml-camel"
      provider: "s2i"
      project: "spring-xml-camel"
      group: "com.inmarsat.esb.templates"
    strategy:
      annotations: {}
      labels: {}
      resources:
        limits: {}
        requests: {}
    template:
      metadata:
        annotations: {}
        labels:
          app: "spring-xml-camel"
          artifact: "spring-xml-camel"
          container: "java"
          component: "spring-xml-camel"
          deploymentconfig: "spring-xml-camel"
          provider: "s2i"
          project: "spring-xml-camel"
          group: "com.inmarsat.esb.templates"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "TZ"
            value: "Etc/UTC"
          - name: "JAVA_OPTIONS"
            value: "-Xmx30m"
          image: "library/spring-xml-camel:latest"
          name: "spring-xml-camel"
          ports:
          - containerPort: 8778
            name: "jolokia"
            protocol: "TCP"
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "(curl -f 127.0.0.1:8778) >/dev/null 2>&1; test $? != 7"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          resources:
            limits:
              memory: "256Mi"
            requests: {}
          volumeMounts:
          - mountPath: "/etc/configmap"
            name: "spring-xml-camel-configmap"
            readOnly: true
          - mountPath: "/etc/secret"
            name: "spring-xml-camel-secret"
            readOnly: true
        imagePullSecrets: []
        nodeSelector: {}
        volumes:
        - configMap:
            items: []
            name: "spring-xml-camel"
          name: "spring-xml-camel-configmap"
        - name: "spring-xml-camel-secret"
          secret:
            secretName: "spring-xml-camel"
    triggers:
    - type: "ConfigChange"
    - imageChangeParams:
        automatic: true
        containerNames:
        - "spring-xml-camel"
        from:
          kind: "ImageStreamTag"
          name: "spring-xml-camel:latest"
      type: "ImageChange"
  status: {}
parameters:
- description: "The Host of the route."
  name: "ROUTE_HOST"
  value: "spring-xml-camel-v1-sandbox.89d9.dev-inmarsat.openshiftapps.com "
- description: "The secret needed to trigger a build"
  from: "[a-zA-Z0-9]{8}"
  generate: "expression"
  name: "BUILD_SECRET"
